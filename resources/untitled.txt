
checkWifi.error && checkWifi.error.error == "no such element"



1. start appium servers for each device with its own port number

appium -p 2345
appium -p 2346

2. test.js contains code that lets the script run in parallel. There is an array of devices that for now have the serial numbers hard coded.

3. Goal is to write a script that will utilize adb devices command to get the devices that are attached to the computer and from their pair a port number for each device.
   The port numbers will increment as many times as needed by 1.
   Once each device has a port number assigned to it, the script will launch an "n" amount of appium servers utilizing the ports, and will then pass the device/port pairs to the test.js file
   In the js file, there will be a function that will dynamically create "device" objects with proper information (user name, password, name, etc)
   Once the objects are created, an instance of the script will execute for each device object.

   4. Further improvements can utilize the creating of a status report for each device the briefely says if everything went well or not

   5. Once this multi device functionality is done, any improvements will be done within the test.js file itself

   6. input for each device could be done in the form of a json file

   7. later on, a separate React UI could be made to help others use the tool and to enter the information for each device


   1. Get adb devices
   2. append port numbers to each device
   3. pass this new data into a new process that opens up n-amount of appium instances for each device
   4. pass same new data into a test.js script that creates an array of devices from the input


   use to close sessions by port number

   netstat -ano | findstr :4073
   // will return a process ID
   // enter it below (would be in the slot of 28652)

   taskkill /PID 28652 /F


   AutomationTool
      tablets
         procedures
            setWifi
            setDisplay
            ...
         outputs
            05232025-0945
            06212025-1715
            ...
         scripts
            mainAutoSetupTablet
            ...

      cellPhones
         procedures
            setMotion
            setLockScreen
            ...
         outputs
            05232025-0945
            06212025-1715
            ...
         scripts
            mainAutoSetupCellPhone
            ...
      
      Tools
         getDevicesAttached
         createDeviceObjectsList
         launchAppiumServers
         ...

      Resources
         toolDescription.txt
         directoryPlanning.md
         ... 



battery optimizations

settings > apps > Authenticator > allow notifications
 done - accessibility > Installed Apps > Sophos accessibility Service
done - settings > app > intercept X > appear on top
settings > apps > (3 dots in top right) > special access > All files Access > Toggle intercept X
settings > apps > (3 dots in top right) > special access > usage data access > intercept X
done - settings > apps > intercept X > Notifications > Notification categories
settings > apps > mobile control > notifications > notification categories
set pin at end

const filesAccess = await driver // need to find way to locate this easy to toggle, difficult to check
      .$(
        `android=new UiScrollable(new UiSelector().scrollable(true)).scrollIntoView(new UiSelector().text("Intercept X").fromParent(new UiSelector().childSelector(new UiSelector().resourceId("android:id/widget_frame").childSelector(new UiSelector().resourceId("android:id/switch_widget")))))`
      )
      .getAttribute("checked");


